$ mkdir learngit
$ cd learngit
$ pwd
/Users/michael/learngit

$ git init
Initialized empty Git repository in /Users/michael/learngit/.git/

$ git add readme.txt

$ git commit -m "wrote a readme file"

$ git status

$ git diff readme.txt 

$ git log

$ git log --pretty=oneline

$ git reset --hard HEAD^

$ git reset --hard 3628164

$ git reflog
ea34578 HEAD@{0}: reset: moving to HEAD^
3628164 HEAD@{1}: commit: append GPL
ea34578 HEAD@{2}: commit: add distributed
cb926e7 HEAD@{3}: commit (initial): wrote a readme file


$ git diff HEAD -- readme.txt 

$ git checkout -- readme.txt

$ git rm test.txt

$ git remote add origin git@github.com:joeytang/learngit.git
$ git push -u origin master
$ git push origin master

gitbash
$ ssh-keygen -t rsa -C "tanghc@163.com"
然后，点“Add SSH Key”，填上任意Title，在Key文本框里粘贴id_rsa.pub文件的内容


$ git clone git@github.com:joeytang/testgit.git


$ git checkout -b dev
Switched to a new branch 'dev'
equals 
$ git branch dev
$ git checkout dev

$ git branch
masterconflict

master11

$ git log --graph --pretty=oneline --abbrev-commit
b1teasdfasdfst123123
b1test111
testbash bug1
teststash123123

$ git stash

git stash apply
git stash drop

git stash pop

$ git remote -v

$ git push origin master

$ git push origin dev
但是，并不是一定要把本地分支往远程推送，那么，哪些分支需要推送，哪些不需要呢？

master分支是主分支，因此要时刻与远程同步；

dev分支是开发分支，团队所有成员都需要在上面工作，所以也需要与远程同步；

bug分支只用于在本地修复bug，就没必要推到远程了，除非老板要看看你每周到底修复了几个bug；

feature分支是否推到远程，取决于你是否和你的小伙伴合作在上面开发。

$ git pull origin dev

$ git branch --set-upstream dev origin/dev

